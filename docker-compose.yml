services:
  postgres:
    image: postgres:16
    container_name: evently-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: evently
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:7
    container_name: evently-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.runCommand({ ping: 1 })']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@postgres:5432/evently?schema=public
    container_name: evently-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/evently?schema=public
      MONGODB_URI: mongodb://mongo:27017/evently
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - "3001:3001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_API_URL: http://localhost:3001
    container_name: evently-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:80"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: evently-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@evently.local
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5050:80"
    profiles: ['ui']

  mongo-express:
    image: mongo-express:latest
    container_name: evently-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "8081:8081"
    profiles: ['ui']

volumes:
  postgres-data:
  mongo-data:
